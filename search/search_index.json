{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Nimba framework warning This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! Everything you need to know about Nimba Framework Nimba Framework is a modern, fast coding, web framework with Python 3.6+. The key features are: Fast to code : Increase the speed to develop features. * Intuitive : Excellent editor support. Quick understanding. Less debugging time.. Easy : Designed to be easy to use and learn. Less time reading docs. Short : Minimizes code duplication. Multiple functionalities. Fewer bugs. Installation $ pip install nimba Create Application $ nimba create --app awesome_app Structure project app - Your app project, you will spend most of your time here. views.py - Your logic code models.py - Define here the schema of your database tests.py - Write your test here staticfiles - The static files. templates - Your template (html page etc\u2026). settings.py - Settings database, secret key and other. mask.py - the command utility, start the server, create views and many more. Run server In your project app awesome_app $ python mask.py serve Monitoring for changes... Starting server in PID 72932 June 25, 2021 - 18:04:32 Serving on http://127.0.0.1:8000 Quit the server with CONTROL-C. Open http://127.0.0.1:8000 in your navigator Continue directly with tutorial Licence This project is licensed under the terms of Nimba solution compagny.","title":"Nimba Framework"},{"location":"#nimba-framework","text":"warning This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! Everything you need to know about Nimba Framework Nimba Framework is a modern, fast coding, web framework with Python 3.6+. The key features are: Fast to code : Increase the speed to develop features. * Intuitive : Excellent editor support. Quick understanding. Less debugging time.. Easy : Designed to be easy to use and learn. Less time reading docs. Short : Minimizes code duplication. Multiple functionalities. Fewer bugs.","title":"Nimba framework"},{"location":"#installation","text":"$ pip install nimba","title":"Installation"},{"location":"#create-application","text":"$ nimba create --app awesome_app","title":"Create Application"},{"location":"#structure-project","text":"app - Your app project, you will spend most of your time here. views.py - Your logic code models.py - Define here the schema of your database tests.py - Write your test here staticfiles - The static files. templates - Your template (html page etc\u2026). settings.py - Settings database, secret key and other. mask.py - the command utility, start the server, create views and many more.","title":"Structure project"},{"location":"#run-server","text":"In your project app awesome_app $ python mask.py serve Monitoring for changes... Starting server in PID 72932 June 25, 2021 - 18:04:32 Serving on http://127.0.0.1:8000 Quit the server with CONTROL-C. Open http://127.0.0.1:8000 in your navigator Continue directly with tutorial","title":"Run server"},{"location":"#licence","text":"This project is licensed under the terms of Nimba solution compagny.","title":"Licence"},{"location":"contributing/","text":"Development - Contributing","title":"Development - Contributing"},{"location":"contributing/#development-contributing","text":"","title":"Development - Contributing"},{"location":"features/","text":"Features Comming soom\u2026","title":"Features"},{"location":"features/#features","text":"Comming soom\u2026","title":"Features"},{"location":"release-notes/","text":"Reloase notes","title":"Reloase notes"},{"location":"release-notes/#reloase-notes","text":"","title":"Reloase notes"},{"location":"tutorial/","text":"Parite 1 - Setup Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! Make sure you have python3.6 +. Let\u2019s start by creating a virtual environment. $ python --version Install Nimba $ pip install nimba Create nimba application $ nimba create --app awesome_app Structure project app - Your app project, you will spend most of your time here. views.py - Your logic code models.py - Define here the schema of your database tests.py - Write your test here staticfiles - The static files. templates - Your template (html page etc\u2026). settings.py - Settings database, secret key and other. mask.py - the command utility, start the server, create views and many more. Run server In your project app awesome_app $ python mask.py serve Monitoring for changes... Starting server in PID 72932 June 25, 2021 - 18:04:32 Serving on http://127.0.0.1:8000 Quit the server with CONTROL-C. Open http://127.0.0.1:8000 You cant change port with python mask.py serve -p 7000 (runing with port 7000) Or sharing ip python mask.py serve -s 0:7000 (0.0.0.0:7000) Create other view A view is a python function decorated with an url path, accepting a web request and returning a response. This response can contain html, template, xml etc. A simple view returning html code with a decorate path. Open your views.py in your app folder from nimba.http import router @router ( '/about' ) def about ( request ): return \"<h1> Hello, <h2> Welcom to my app page\" Each life is decorated by a road indicating a path from nimba.http import router @router('/about') the router decorator makes your function a view, it receives web requests. request is the request web content all data get and post Open http://127.0.0.1:8000/about Continue to the tutorial Partie 2 - Endpoint","title":"Parite 1 - Setup"},{"location":"tutorial/#parite-1-setup","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! Make sure you have python3.6 +. Let\u2019s start by creating a virtual environment. $ python --version","title":"Parite 1 - Setup"},{"location":"tutorial/#install-nimba","text":"$ pip install nimba","title":"Install Nimba"},{"location":"tutorial/#create-nimba-application","text":"$ nimba create --app awesome_app","title":"Create nimba application"},{"location":"tutorial/#structure-project","text":"app - Your app project, you will spend most of your time here. views.py - Your logic code models.py - Define here the schema of your database tests.py - Write your test here staticfiles - The static files. templates - Your template (html page etc\u2026). settings.py - Settings database, secret key and other. mask.py - the command utility, start the server, create views and many more.","title":"Structure project"},{"location":"tutorial/#run-server","text":"In your project app awesome_app $ python mask.py serve Monitoring for changes... Starting server in PID 72932 June 25, 2021 - 18:04:32 Serving on http://127.0.0.1:8000 Quit the server with CONTROL-C. Open http://127.0.0.1:8000 You cant change port with python mask.py serve -p 7000 (runing with port 7000) Or sharing ip python mask.py serve -s 0:7000 (0.0.0.0:7000)","title":"Run server"},{"location":"tutorial/#create-other-view","text":"A view is a python function decorated with an url path, accepting a web request and returning a response. This response can contain html, template, xml etc. A simple view returning html code with a decorate path. Open your views.py in your app folder from nimba.http import router @router ( '/about' ) def about ( request ): return \"<h1> Hello, <h2> Welcom to my app page\" Each life is decorated by a road indicating a path from nimba.http import router @router('/about') the router decorator makes your function a view, it receives web requests. request is the request web content all data get and post Open http://127.0.0.1:8000/about Continue to the tutorial Partie 2 - Endpoint","title":"Create other view"},{"location":"tutorial/css-style/","text":"Partie 3 - CSS and JavaScript Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! templates/awesome_app/films.html <!DOCTYPE html> < html > < head > < title > My articles </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > </ head > < body > < h1 > List films </ h1 > < div class = \"films-list\" > {% for film in films %} < div class = \"card-film\" > < div class = \"image\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" /> </ div > < div class = \"description\" > < h3 > {{ film.title }} </ h3 > < h5 >< strong >< em > Year of production : </ em ></ strong > {{ film.released }} </ h5 > < div class = \"button-two\" > < a type = \"button\" class = \"button-favoir-and-details\" href = \"/films/{{ film.id }}\" > Details </ a > </ div > </ div > </ div > {% endfor %} </ div > </ body > </ html > templates/awesome_app/film_detail.html <!DOCTYPE html> < html > < head > < title > {{ article.title }} </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > < style type = \"text/css\" > . contenair { width : 85 % ; margin : 0 auto ; margin-top : 40 px ; display : flex ; justify-content : space-between ; font-family : helvetica , tahoma , sans-serif ; text-align : left ; } . data-film { display : flex ; } . info p { line-height : 27 px ; } . info p span { display : block ; } . info p h3 { display : inline-block ; } . couverture { margin-left : 50 px ; } </ style > </ head > < body > < div class = \"contenair\" > < div class = \"data-film\" > < div class = \"info\" > < a href = \"/films\" > Back to list </ a > < h1 > {{ film.title }} </ h1 > < p > {{ film.description }} </ p > < p > < span >< strong > Released to : </ strong > {{ film.released }} </ span > < span >< strong > Runtime : </ strong > {{ film.runtime }} </ span > < span >< strong > Rated : </ strong > {{ film.rated }} </ span > < span >< strong > Languages : </ strong > {{ film.country }} </ span > </ p > </ div > < div class = \"image\" > < div class = \"couverture\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" width = \"450\" > </ div > </ div > </ div > </ div > </ body > </ html > In the part, we code the links in hard. we are going to change that. Continue to the tutorial Partie 4 - Query parameters","title":"Partie 3 - CSS and JavaScript"},{"location":"tutorial/css-style/#partie-3-css-and-javascript","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! templates/awesome_app/films.html <!DOCTYPE html> < html > < head > < title > My articles </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > </ head > < body > < h1 > List films </ h1 > < div class = \"films-list\" > {% for film in films %} < div class = \"card-film\" > < div class = \"image\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" /> </ div > < div class = \"description\" > < h3 > {{ film.title }} </ h3 > < h5 >< strong >< em > Year of production : </ em ></ strong > {{ film.released }} </ h5 > < div class = \"button-two\" > < a type = \"button\" class = \"button-favoir-and-details\" href = \"/films/{{ film.id }}\" > Details </ a > </ div > </ div > </ div > {% endfor %} </ div > </ body > </ html > templates/awesome_app/film_detail.html <!DOCTYPE html> < html > < head > < title > {{ article.title }} </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > < style type = \"text/css\" > . contenair { width : 85 % ; margin : 0 auto ; margin-top : 40 px ; display : flex ; justify-content : space-between ; font-family : helvetica , tahoma , sans-serif ; text-align : left ; } . data-film { display : flex ; } . info p { line-height : 27 px ; } . info p span { display : block ; } . info p h3 { display : inline-block ; } . couverture { margin-left : 50 px ; } </ style > </ head > < body > < div class = \"contenair\" > < div class = \"data-film\" > < div class = \"info\" > < a href = \"/films\" > Back to list </ a > < h1 > {{ film.title }} </ h1 > < p > {{ film.description }} </ p > < p > < span >< strong > Released to : </ strong > {{ film.released }} </ span > < span >< strong > Runtime : </ strong > {{ film.runtime }} </ span > < span >< strong > Rated : </ strong > {{ film.rated }} </ span > < span >< strong > Languages : </ strong > {{ film.country }} </ span > </ p > </ div > < div class = \"image\" > < div class = \"couverture\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" width = \"450\" > </ div > </ div > </ div > </ div > </ body > </ html > In the part, we code the links in hard. we are going to change that. Continue to the tutorial Partie 4 - Query parameters","title":"Partie 3 - CSS and JavaScript"},{"location":"tutorial/deployment/","text":"Partie 8 - Deployment Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! soon\u2026 Continue Advenced concept Nimba Advenced","title":"Partie 8 - Deployment"},{"location":"tutorial/deployment/#partie-8-deployment","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! soon\u2026 Continue Advenced concept Nimba Advenced","title":"Partie 8 - Deployment"},{"location":"tutorial/forms/","text":"Partie 7 - Forms Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! soon.... Continue to the tutorial Partie 8 - Deployment","title":"Partie 7 - Forms"},{"location":"tutorial/forms/#partie-7-forms","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! soon.... Continue to the tutorial Partie 8 - Deployment","title":"Partie 7 - Forms"},{"location":"tutorial/models/","text":"Partie 6 - Models Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! soon\u2026 Continue to the tutorial Partie 7 - Forms","title":"Partie 6 - Models"},{"location":"tutorial/models/#partie-6-models","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! soon\u2026 Continue to the tutorial Partie 7 - Forms","title":"Partie 6 - Models"},{"location":"tutorial/path-params/","text":"Partie 2 - Endpoint Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! app/views.py from nimba.http import router , render films = [ { \"id\" : 1 , \"title\" : \"Dawn of the Planet of the Apes\" , \"released\" : \"2016-10-10\" , \"description\" : \"A group of scientists in San Francisco struggle to stay alive in the aftermath of a plague that is wiping out humanity, while Caesar tries to maintain dominance over his community of intelligent apes\" , \"runtime\" : \"02:00:00\" , \"country\" : \"French\" , \"rated\" : \"9.10\" , \"image\" : \"films/c6b7a11f-d1cb-427f-b784-4475f033fc48_1_gxBKoUN.png\" }, { \"id\" : 2 , \"title\" : \"X-Men: Days of Future Past\" , \"released\" : \"2016-10-16\" , \"description\" : \"The ultimate X-Men ensemble fights a war for the survival of the species across two time periods as they join forces with their younger selves in an epic battle that must change the past \u2013 to save our future.\" , \"runtime\" : \"01:55:00\" , \"country\" : \"USA\" , \"rated\" : \"6.42\" , \"image\" : \"films/652565bb-02ad-487f-929e-78308085ca1e_4.jpg\" }, { \"id\" : 3 , \"title\" : \"Despicable Me 2\" , \"released\" : \"2013-10-02\" , \"description\" : \"Gru is recruited by the Anti-Villain League to help deal with a powerful new super criminal.\" , \"runtime\" : \"02:05:00\" , \"country\" : \"USA\" , \"rated\" : \"7.50\" , \"image\" : \"films/43b8cf94-8074-4e72-b58f-de6a3d067464_11.jpg\" }, { \"id\" : 4 , \"title\" : \"A Bug's Life\" , \"released\" : \"1998-10-04\" , \"description\" : \"On behalf of \\\" oppressed bugs everywhere, \\\" an inventive ant named Flik hires a troupe of warrior bugs to defend his bustling colony from a horde of freeloading grasshoppers led by the evil-minded Hopper.\" , \"runtime\" : \"01:56:40\" , \"country\" : \"Spanish\" , \"rated\" : \"7.00\" , \"image\" : \"films/92b4aed5-ef06-4065-af9a-1bb65e3d36d5_13.jpg\" }, ] @router ( '/' ) def list_films ( request ): contexts = { 'films' : films } return render ( 'awesome_app/films.html' , contexts ) templates/awesome_app/films.html <!DOCTYPE html> < html > < head > < title > My articles </ title > </ head > < body > < h1 > List films </ h1 > < div class = \"films-list\" > {% for film in films %} < div class = \"card-film\" > < div class = \"image\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" /> </ div > < div class = \"description\" > < h3 > {{ film.title }} </ h3 > < h5 >< strong >< em > Year of production : </ em ></ strong > {{ film.released }} </ h5 > < div class = \"button-two\" > < a type = \"button\" class = \"button-favoir-and-details\" href = \"/films/{{ film.id }}\" > Details </ a > </ div > </ div > </ div > {% endfor %} </ div > </ body > </ html > app/views.py from nimba.http import router , render @router ( '/films/<id:int>' ) def film_detail ( request , id ): #films variable exists film = { 'data' : film for film in films if film [ 'id' ] == id } if not film . get ( 'data' ): return \"Film does not exist\" contexts = { 'film' : film [ 'data' ], } return render ( 'awesome_app/film_detail.html' , film ) @router ( '/films/<id:int>' ) templates/awesome_app/film_detail.html <!DOCTYPE html> < html > < head > < title > {{ article.title }} </ title > </ head > < body > < div class = \"contenair\" > < div class = \"data-film\" > < div class = \"info\" > < a href = \"/films\" > Back to list </ a > < h1 > {{ film.title }} </ h1 > < p > {{ film.description }} </ p > < p > < span >< strong > Released to : </ strong > {{ film.released }} </ span > < span >< strong > Runtime : </ strong > {{ film.runtime }} </ span > < span >< strong > Rated : </ strong > {{ film.rated }} </ span > < span >< strong > Languages : </ strong > {{ film.country }} </ span > </ p > </ div > < div class = \"image\" > < div class = \"couverture\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" width = \"450\" > </ div > </ div > </ div > </ div > </ body > </ html > Continue to the tutorial Partie 3 - Query parameters","title":"Partie 2 - Endpoint"},{"location":"tutorial/path-params/#partie-2-endpoint","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! app/views.py from nimba.http import router , render films = [ { \"id\" : 1 , \"title\" : \"Dawn of the Planet of the Apes\" , \"released\" : \"2016-10-10\" , \"description\" : \"A group of scientists in San Francisco struggle to stay alive in the aftermath of a plague that is wiping out humanity, while Caesar tries to maintain dominance over his community of intelligent apes\" , \"runtime\" : \"02:00:00\" , \"country\" : \"French\" , \"rated\" : \"9.10\" , \"image\" : \"films/c6b7a11f-d1cb-427f-b784-4475f033fc48_1_gxBKoUN.png\" }, { \"id\" : 2 , \"title\" : \"X-Men: Days of Future Past\" , \"released\" : \"2016-10-16\" , \"description\" : \"The ultimate X-Men ensemble fights a war for the survival of the species across two time periods as they join forces with their younger selves in an epic battle that must change the past \u2013 to save our future.\" , \"runtime\" : \"01:55:00\" , \"country\" : \"USA\" , \"rated\" : \"6.42\" , \"image\" : \"films/652565bb-02ad-487f-929e-78308085ca1e_4.jpg\" }, { \"id\" : 3 , \"title\" : \"Despicable Me 2\" , \"released\" : \"2013-10-02\" , \"description\" : \"Gru is recruited by the Anti-Villain League to help deal with a powerful new super criminal.\" , \"runtime\" : \"02:05:00\" , \"country\" : \"USA\" , \"rated\" : \"7.50\" , \"image\" : \"films/43b8cf94-8074-4e72-b58f-de6a3d067464_11.jpg\" }, { \"id\" : 4 , \"title\" : \"A Bug's Life\" , \"released\" : \"1998-10-04\" , \"description\" : \"On behalf of \\\" oppressed bugs everywhere, \\\" an inventive ant named Flik hires a troupe of warrior bugs to defend his bustling colony from a horde of freeloading grasshoppers led by the evil-minded Hopper.\" , \"runtime\" : \"01:56:40\" , \"country\" : \"Spanish\" , \"rated\" : \"7.00\" , \"image\" : \"films/92b4aed5-ef06-4065-af9a-1bb65e3d36d5_13.jpg\" }, ] @router ( '/' ) def list_films ( request ): contexts = { 'films' : films } return render ( 'awesome_app/films.html' , contexts ) templates/awesome_app/films.html <!DOCTYPE html> < html > < head > < title > My articles </ title > </ head > < body > < h1 > List films </ h1 > < div class = \"films-list\" > {% for film in films %} < div class = \"card-film\" > < div class = \"image\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" /> </ div > < div class = \"description\" > < h3 > {{ film.title }} </ h3 > < h5 >< strong >< em > Year of production : </ em ></ strong > {{ film.released }} </ h5 > < div class = \"button-two\" > < a type = \"button\" class = \"button-favoir-and-details\" href = \"/films/{{ film.id }}\" > Details </ a > </ div > </ div > </ div > {% endfor %} </ div > </ body > </ html > app/views.py from nimba.http import router , render @router ( '/films/<id:int>' ) def film_detail ( request , id ): #films variable exists film = { 'data' : film for film in films if film [ 'id' ] == id } if not film . get ( 'data' ): return \"Film does not exist\" contexts = { 'film' : film [ 'data' ], } return render ( 'awesome_app/film_detail.html' , film ) @router ( '/films/<id:int>' ) templates/awesome_app/film_detail.html <!DOCTYPE html> < html > < head > < title > {{ article.title }} </ title > </ head > < body > < div class = \"contenair\" > < div class = \"data-film\" > < div class = \"info\" > < a href = \"/films\" > Back to list </ a > < h1 > {{ film.title }} </ h1 > < p > {{ film.description }} </ p > < p > < span >< strong > Released to : </ strong > {{ film.released }} </ span > < span >< strong > Runtime : </ strong > {{ film.runtime }} </ span > < span >< strong > Rated : </ strong > {{ film.rated }} </ span > < span >< strong > Languages : </ strong > {{ film.country }} </ span > </ p > </ div > < div class = \"image\" > < div class = \"couverture\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" width = \"450\" > </ div > </ div > </ div > </ div > </ body > </ html > Continue to the tutorial Partie 3 - Query parameters","title":"Partie 2 - Endpoint"},{"location":"tutorial/post-params/","text":"Partie 5 - POST data Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! templates/awesome_app/detail_film.html <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > {{ film.title }} </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > < style type = \"text/css\" > . contenair { width : 85 % ; margin : 0 auto ; margin-top : 40 px ; display : flex ; justify-content : space-between ; font-family : helvetica , tahoma , sans-serif ; text-align : left ; } . data-film { display : flex ; } . info p { line-height : 27 px ; } . info p span { display : block ; } . info p h3 { display : inline-block ; } . couverture { margin-left : 50 px ; } </ style > </ head > < body > < div class = \"contenair\" > < div class = \"data-film\" > < div class = \"info\" > < a href = \"/films\" > Back to list </ a > < h1 > {{ film.title }} </ h1 > < p > {{ film.description }} </ p > < p > < span >< strong > Released to : </ strong > {{ film.released }} </ span > < span >< strong > Runtime : </ strong > {{ film.runtime }} </ span > < span >< strong > Rated : </ strong > {{ film.rated }} </ span > < span >< strong > Languages : </ strong > {{ film.country }} </ span > </ p > <!-- film --> < div class = \"comment\" > < form method = \"post\" > < div > < input type = \"text\" name = \"name\" > </ div > < div > < textarea rows = \"10\" cols = \"50\" name = \"comment\" ></ textarea > </ div > < input type = \"submit\" class = \"button-favoir-and-details\" value = \"Submit\" style = \"font-size: 21px;\" > </ form > <!-- list comment --> </ div > </ div > < div class = \"image\" > < div class = \"couverture\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" width = \"450\" > </ div > </ div > </ div > </ div > </ body > </ html > app/views.py @router ( '/films/<int:id>' , methods = [ 'GET' , 'POST' ]) def film_detail ( request , id ): film = { 'data' : film for film in films if film [ 'id' ] == id } if not film . get ( 'data' ): return \"Film does not exist\" # post data if request . method == 'POST' : name = request . POST . get ( 'name' ) comment = request . POST . get ( 'comment' ) print ( name , comment ) contexts = { 'film' : film [ 'data' ], } return render ( 'awesome_app/detail_film.html' , contexts ) Continue to the tutorial Partie 6 - Models","title":"Partie 5 - POST data"},{"location":"tutorial/post-params/#partie-5-post-data","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! templates/awesome_app/detail_film.html <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > {{ film.title }} </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > < style type = \"text/css\" > . contenair { width : 85 % ; margin : 0 auto ; margin-top : 40 px ; display : flex ; justify-content : space-between ; font-family : helvetica , tahoma , sans-serif ; text-align : left ; } . data-film { display : flex ; } . info p { line-height : 27 px ; } . info p span { display : block ; } . info p h3 { display : inline-block ; } . couverture { margin-left : 50 px ; } </ style > </ head > < body > < div class = \"contenair\" > < div class = \"data-film\" > < div class = \"info\" > < a href = \"/films\" > Back to list </ a > < h1 > {{ film.title }} </ h1 > < p > {{ film.description }} </ p > < p > < span >< strong > Released to : </ strong > {{ film.released }} </ span > < span >< strong > Runtime : </ strong > {{ film.runtime }} </ span > < span >< strong > Rated : </ strong > {{ film.rated }} </ span > < span >< strong > Languages : </ strong > {{ film.country }} </ span > </ p > <!-- film --> < div class = \"comment\" > < form method = \"post\" > < div > < input type = \"text\" name = \"name\" > </ div > < div > < textarea rows = \"10\" cols = \"50\" name = \"comment\" ></ textarea > </ div > < input type = \"submit\" class = \"button-favoir-and-details\" value = \"Submit\" style = \"font-size: 21px;\" > </ form > <!-- list comment --> </ div > </ div > < div class = \"image\" > < div class = \"couverture\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" width = \"450\" > </ div > </ div > </ div > </ div > </ body > </ html > app/views.py @router ( '/films/<int:id>' , methods = [ 'GET' , 'POST' ]) def film_detail ( request , id ): film = { 'data' : film for film in films if film [ 'id' ] == id } if not film . get ( 'data' ): return \"Film does not exist\" # post data if request . method == 'POST' : name = request . POST . get ( 'name' ) comment = request . POST . get ( 'comment' ) print ( name , comment ) contexts = { 'film' : film [ 'data' ], } return render ( 'awesome_app/detail_film.html' , contexts ) Continue to the tutorial Partie 6 - Models","title":"Partie 5 - POST data"},{"location":"tutorial/query-params/","text":"Partie 4 - Query parameters Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! templates/awesome_app/films.html <!DOCTYPE html> < html > < head > < title > My articles </ title > </ head > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > < body class = \"contenair\" > < h1 > List films </ h1 > < div class = \"search-field\" > < form > < input type = \"search\" name = \"search\" value = \"{{ search }}\" placeholder = \"Search film with title...\" > < input type = \"submit\" class = \"button-favoir-and-details\" value = \"Search\" style = \"font-size: 21px;\" > </ form > </ div > < div class = \"films-list\" > {% if films %} {% for film in films %} < div class = \"card-film\" > < div class = \"image\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" /> </ div > < div class = \"description\" > < h3 > {{ film.title }} </ h3 > < h5 >< strong >< em > Year of production : </ em ></ strong > {{ film.released }} </ h5 > < div class = \"button-two\" > < a type = \"button\" class = \"button-favoir-and-details\" href = \"/films/{{ film.id }}\" > Details </ a > </ div > </ div > </ div > {% endfor %} {% else %} < p > Not found, try other film title. </ p > {% endif %} </ div > </ body > </ html > app/views.py from nimba.http import router , render @router ( '/' ) def home ( request ): search = request . GET . get ( 'search' , '' ) films_filter = [ film for film in films if search in ' ' . join ( [ film [ 'title' ], film [ 'description' ], film [ 'country' ]] ) ] if search else films contexts = { 'films' : films_filter , 'search' : search , } return render ( 'awesome_app/list_films.html' , contexts ) Continue to the tutorial Partie 5 - POST data","title":"Partie 4 - Query parameters"},{"location":"tutorial/query-params/#partie-4-query-parameters","text":"Warning : This project is private and is still in design, not ready for production. Create an issue if you encounter any bugs! templates/awesome_app/films.html <!DOCTYPE html> < html > < head > < title > My articles </ title > </ head > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ load_static('awesome_app/css/main.css') }}\" > < body class = \"contenair\" > < h1 > List films </ h1 > < div class = \"search-field\" > < form > < input type = \"search\" name = \"search\" value = \"{{ search }}\" placeholder = \"Search film with title...\" > < input type = \"submit\" class = \"button-favoir-and-details\" value = \"Search\" style = \"font-size: 21px;\" > </ form > </ div > < div class = \"films-list\" > {% if films %} {% for film in films %} < div class = \"card-film\" > < div class = \"image\" > < img src = \"https://raw.githubusercontent.com/hadpro24/googlechallenge-phase-1-backend/master/media/{{ film.image }}\" alt = \"{{ film.title }}\" /> </ div > < div class = \"description\" > < h3 > {{ film.title }} </ h3 > < h5 >< strong >< em > Year of production : </ em ></ strong > {{ film.released }} </ h5 > < div class = \"button-two\" > < a type = \"button\" class = \"button-favoir-and-details\" href = \"/films/{{ film.id }}\" > Details </ a > </ div > </ div > </ div > {% endfor %} {% else %} < p > Not found, try other film title. </ p > {% endif %} </ div > </ body > </ html > app/views.py from nimba.http import router , render @router ( '/' ) def home ( request ): search = request . GET . get ( 'search' , '' ) films_filter = [ film for film in films if search in ' ' . join ( [ film [ 'title' ], film [ 'description' ], film [ 'country' ]] ) ] if search else films contexts = { 'films' : films_filter , 'search' : search , } return render ( 'awesome_app/list_films.html' , contexts ) Continue to the tutorial Partie 5 - POST data","title":"Partie 4 - Query parameters"}]}